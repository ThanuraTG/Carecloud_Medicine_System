{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanura Thilak\\\\Desktop\\\\firstp\\\\src\\\\PatientRegistrationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PatientRegistrationForm.css';\nimport VerticalMenu from './Components/verticalmenu';\nimport Header from './Components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientRegistrationForm = () => {\n  _s();\n  const [gender, setGender] = useState('');\n  const [guardianGender, setGuardianGender] = useState('');\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    address: '',\n    birthday: '',\n    phoneNumber: '',\n    guardianFirstName: '',\n    guardianLastName: '',\n    guardianAddress: '',\n    guardianBirthday: '',\n    guardianPhoneNumber: ''\n  });\n  const [patients, setPatients] = useState([]);\n  const [editingPatientId, setEditingPatientId] = useState(null); // Track editing state\n\n  // Fetch all patients on component load\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const data = await getAllUsers();\n      setPatients(data);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const handleGenderChange = event => {\n    setGender(event.target.value);\n  };\n  const handleGuardianGenderChange = event => {\n    setGuardianGender(event.target.value);\n  };\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      if (editingPatientId) {\n        // Update existing patient\n        await updateUser(editingPatientId, {\n          ...formData,\n          gender,\n          guardianGender\n        });\n        alert('Patient updated successfully!');\n      } else {\n        // Add new patient\n        await AddUserModal({\n          ...formData,\n          gender,\n          guardianGender\n        });\n        alert('Patient added successfully!');\n      }\n      handleClear();\n      fetchPatients();\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert('Error occurred while saving patient data.');\n    }\n  };\n  const handleEdit = patient => {\n    setEditingPatientId(patient.id);\n    setGender(patient.gender || '');\n    setGuardianGender(patient.guardianGender || '');\n    setFormData({\n      firstName: patient.firstName,\n      lastName: patient.lastName,\n      address: patient.address,\n      birthday: patient.birthday,\n      phoneNumber: patient.phoneNumber,\n      guardianFirstName: patient.guardianFirstName,\n      guardianLastName: patient.guardianLastName,\n      guardianAddress: patient.guardianAddress,\n      guardianBirthday: patient.guardianBirthday,\n      guardianPhoneNumber: patient.guardianPhoneNumber\n    });\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteUser(id);\n      alert('Patient deleted successfully!');\n      fetchPatients();\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      alert('Error occurred while deleting patient.');\n    }\n  };\n  const handleClear = () => {\n    setEditingPatientId(null);\n    setGender('');\n    setGuardianGender('');\n    setFormData({\n      firstName: '',\n      lastName: '',\n      address: '',\n      birthday: '',\n      phoneNumber: '',\n      guardianFirstName: '',\n      guardianLastName: '',\n      guardianAddress: '',\n      guardianBirthday: '',\n      guardianPhoneNumber: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-registration\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(VerticalMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-contentP\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-containerP\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingPatientId ? 'Edit Patient' : 'Patient Registration Form'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Personal Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"firstName\",\n                value: formData.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"lastName\",\n                value: formData.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gender,\n                onChange: handleGenderChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Select Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"address\",\n                value: formData.address,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn\",\n              onClick: handleSubmit,\n              children: editingPatientId ? 'Update' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-btn\",\n              onClick: handleClear,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [patient.firstName, \" \", patient.lastName, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(patient),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(patient.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n// export default PatientRegistrationForm;\n\n// import React, { useEffect, useState } from 'react'\n// import VerticalMenu from './Components/verticalmenu'\n// import Header from './Components/Header'\n// import './ManageSystemUser.css';\n// import { getAllUsers, updateUser, deleteUser } from './Components/api';\n\n// export default function ManageSyatemUser() {\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [editingUser, setEditingUser] = useState(null);\n//   const [editFormData, setEditFormData] = useState({});\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const usersData = await getAllUsers();\n//         setUsers(usersData);\n//       } catch (error) {\n//         console.error(\"Failed to fetch users:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   const handleEditClick = (user) => {\n//     setEditingUser(user);\n//     setEditFormData({\n//       username: user.username,\n//       password: '', // Leave empty, only set if changing password\n//       firstName: user.firstName,\n//       lastName: user.lastName,\n//       email: user.email,\n//       phoneNumber: user.phoneNumber,\n//       roleId: user.role ? user.role.id : '',\n//       active: user.active,\n//     });\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditFormData({\n//       ...editFormData,\n//       [name]: name === \"active\" ? value === \"true\" : value, // Convert \"true\"/\"false\" to boolean\n//     });\n//   };\n\n//   const handleUpdateSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Prepare the payload, making sure roleId is a number\n//       const updatePayload = {\n//         ...editFormData,\n//         roleId: Number(editFormData.roleId), // Ensure roleId is a number\n//       };\n\n//       // Send the update request\n//       await updateUser(editingUser.id, updatePayload);\n\n//       // Update the user list and close the form\n//       setUsers(users.map(user => (user.id === editingUser.id ? { ...editingUser, ...updatePayload } : user)));\n//       setEditingUser(null);\n//     } catch (error) {\n//       console.error(\"Error updating user:\", error);\n//     }\n//   };\n\n//   const handleDelete = async (userId) => {\n//     try {\n//       await deleteUser(userId);\n//       setUsers(users.filter(user => user.id !== userId));\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div className='Manage-user-list'>\n//         <VerticalMenu/>\n//         <Header/>\n//         <div className='box-Manage-users'>\n//           <div className =\"header-Manage-users\">\n//             <h2>STAFF</h2>\n//           </div>\n\n//           <div className='search-Manage-users'>\n//             <label htmlFor='search'>Search: </label>\n//             <input type='text' id='search' placeholder='Search Users..'/>\n//           </div>\n\n//           {users.length > 0 ? (\n//           <table className='Manage-users-table'>\n//             <thead>\n//             <tr>\n//               <th>Username</th>\n//               <th>First Name</th>\n//               <th>Last Name</th>\n//               <th>Email</th>\n//               <th>Phone Number</th>\n//               <th>Role</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {users.map(user => (\n//               <tr key={user.id}>\n//                 <td>{user.username}</td>\n//                 <td>{user.firstName}</td>\n//                 <td>{user.lastName}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.phoneNumber}</td>\n//                 <td>{user.role ? user.role.roleType : 'N/A'}</td>\n//                 <td>\n//                   <button onClick={() => handleEditClick(user)}>Update</button>\n//                   <button onClick={() => handleDelete(user.id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p className=\"no-users\">No users found</p>\n//       )}\n\n//           <div className='pagination-Manage-users'>\n//             <span> Showing 0 to 0 pf entire </span>\n\n//             <div className='button-Manage-users'>\n//               <button className='previous-button-Manage-users'>\n//                 Previous\n//               </button>\n\n//             <button className='next-button-Manage-users'>\n//               Next\n//             </button>\n//             {editingUser && (\n//   <div className=\"edit-user-form-container\">\n//     <h3>Edit User</h3>\n//     <form onSubmit={handleUpdateSubmit}>\n//       <label>Username:</label>\n//       <input\n//         type=\"text\"\n//         name=\"username\"\n//         value={editFormData.username}\n//         onChange={handleInputChange}\n//       />\n//       <label>Password:</label>\n//       <input\n//         type=\"password\"\n//         name=\"password\"\n//         value={editFormData.password}\n//         onChange={handleInputChange}\n//       />\n//       <label>First Name:</label>\n//       <input\n//         type=\"text\"\n//         name=\"firstName\"\n//         value={editFormData.firstName}\n//         onChange={handleInputChange}\n//       />\n//       <label>Last Name:</label>\n//       <input\n//         type=\"text\"\n//         name=\"lastName\"\n//         value={editFormData.lastName}\n//         onChange={handleInputChange}\n//       />\n//       <label>Email:</label>\n//       <input\n//         type=\"email\"\n//         name=\"email\"\n//         value={editFormData.email}\n//         onChange={handleInputChange}\n//       />\n//       <label>Phone Number:</label>\n//       <input\n//         type=\"text\"\n//         name=\"phoneNumber\"\n//         value={editFormData.phoneNumber}\n//         onChange={handleInputChange}\n//       />\n//       <label>Role:</label>\n//       <select\n//         name=\"roleId\"\n//         value={editFormData.roleId || ''}\n//         onChange={handleInputChange}\n//       >\n//         <option value=\"\">Select a role</option>\n//         <option value=\"1\">ADMIN</option>\n//         <option value=\"2\">STAFF</option>\n//         <option value=\"3\">DOCTOR</option>\n//       </select>\n//       <label>Active:</label>\n//       <select\n//         name=\"active\"\n//         value={editFormData.active}\n//         onChange={handleInputChange}\n//       >\n//         <option value={true}>Active</option>\n//         <option value={false}>Inactive</option>\n//       </select>\n//       <button type=\"submit\">Save</button>\n//       <button type=\"button\" onClick={() => setEditingUser(null)}>Cancel</button>\n//     </form>\n//   </div>\n// )}\n//             </div>\n//           </div>\n//         </div>\n\n//     </div>\n//   )\n// }\n_s(PatientRegistrationForm, \"uGpGvQ9KCH2L5PmGJr44YnZwU8o=\");\n_c = PatientRegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"PatientRegistrationForm\");","map":{"version":3,"names":["React","useState","useEffect","VerticalMenu","Header","jsxDEV","_jsxDEV","PatientRegistrationForm","_s","gender","setGender","guardianGender","setGuardianGender","formData","setFormData","firstName","lastName","address","birthday","phoneNumber","guardianFirstName","guardianLastName","guardianAddress","guardianBirthday","guardianPhoneNumber","patients","setPatients","editingPatientId","setEditingPatientId","fetchPatients","data","getAllUsers","error","console","handleGenderChange","event","target","value","handleGuardianGenderChange","handleChange","name","handleSubmit","updateUser","alert","AddUserModal","handleClear","handleEdit","patient","id","handleDelete","deleteUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Thanura Thilak/Desktop/firstp/src/PatientRegistrationForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PatientRegistrationForm.css';\r\nimport VerticalMenu from './Components/verticalmenu';\r\nimport Header from './Components/Header';\r\n\r\nconst PatientRegistrationForm = () => {\r\n  const [gender, setGender] = useState('');\r\n  const [guardianGender, setGuardianGender] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    address: '',\r\n    birthday: '',\r\n    phoneNumber: '',\r\n    guardianFirstName: '',\r\n    guardianLastName: '',\r\n    guardianAddress: '',\r\n    guardianBirthday: '',\r\n    guardianPhoneNumber: '',\r\n  });\r\n  const [patients, setPatients] = useState([]);\r\n  const [editingPatientId, setEditingPatientId] = useState(null); // Track editing state\r\n\r\n  // Fetch all patients on component load\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const data = await getAllUsers();\r\n      setPatients(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const handleGenderChange = (event) => {\r\n    setGender(event.target.value);\r\n  };\r\n\r\n  const handleGuardianGenderChange = (event) => {\r\n    setGuardianGender(event.target.value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (editingPatientId) {\r\n        // Update existing patient\r\n        await updateUser(editingPatientId, { ...formData, gender, guardianGender });\r\n        alert('Patient updated successfully!');\r\n      } else {\r\n        // Add new patient\r\n        await AddUserModal({ ...formData, gender, guardianGender });\r\n        alert('Patient added successfully!');\r\n      }\r\n      handleClear();\r\n      fetchPatients();\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n      alert('Error occurred while saving patient data.');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (patient) => {\r\n    setEditingPatientId(patient.id);\r\n    setGender(patient.gender || '');\r\n    setGuardianGender(patient.guardianGender || '');\r\n    setFormData({\r\n      firstName: patient.firstName,\r\n      lastName: patient.lastName,\r\n      address: patient.address,\r\n      birthday: patient.birthday,\r\n      phoneNumber: patient.phoneNumber,\r\n      guardianFirstName: patient.guardianFirstName,\r\n      guardianLastName: patient.guardianLastName,\r\n      guardianAddress: patient.guardianAddress,\r\n      guardianBirthday: patient.guardianBirthday,\r\n      guardianPhoneNumber: patient.guardianPhoneNumber,\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteUser(id);\r\n      alert('Patient deleted successfully!');\r\n      fetchPatients();\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error);\r\n      alert('Error occurred while deleting patient.');\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setEditingPatientId(null);\r\n    setGender('');\r\n    setGuardianGender('');\r\n    setFormData({\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      birthday: '',\r\n      phoneNumber: '',\r\n      guardianFirstName: '',\r\n      guardianLastName: '',\r\n      guardianAddress: '',\r\n      guardianBirthday: '',\r\n      guardianPhoneNumber: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-registration\">\r\n      <Header />\r\n      <div className=\"sidebar\">\r\n        <VerticalMenu />\r\n      </div>\r\n\r\n      <div className=\"main-contentP\">\r\n        <div className=\"form-containerP\">\r\n          <h2>{editingPatientId ? 'Edit Patient' : 'Patient Registration Form'}</h2>\r\n\r\n          {/* Form for adding/editing patient */}\r\n          <div className=\"form-section\">\r\n            {/* Personal Details */}\r\n            <div className=\"personal-details\">\r\n              <h3>Personal Details</h3>\r\n              <div className=\"input-group\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label>Last Name</label>\r\n                <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label>Gender</label>\r\n                <select value={gender} onChange={handleGenderChange}>\r\n                  <option value=\"\" disabled>Select Gender</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label>Address</label>\r\n                <input type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} />\r\n              </div>\r\n              {/* Additional personal fields */}\r\n            </div>\r\n\r\n            {/* Submit and Clear Buttons */}\r\n            <div className=\"form-buttons\">\r\n              <button className=\"submit-btn\" onClick={handleSubmit}>\r\n                {editingPatientId ? 'Update' : 'Submit'}\r\n              </button>\r\n              <button className=\"clear-btn\" onClick={handleClear}>Clear</button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* List of patients */}\r\n          <div className=\"patient-list\">\r\n            <h3>All Patients</h3>\r\n            <ul>\r\n              {patients.map((patient) => (\r\n                <li key={patient.id}>\r\n                  {patient.firstName} {patient.lastName}\r\n                  <button onClick={() => handleEdit(patient)}>Edit</button>\r\n                  <button onClick={() => handleDelete(patient.id)}>Delete</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default PatientRegistrationForm;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n// import VerticalMenu from './Components/verticalmenu'\r\n// import Header from './Components/Header'\r\n// import './ManageSystemUser.css';\r\n// import { getAllUsers, updateUser, deleteUser } from './Components/api';\r\n\r\n// export default function ManageSyatemUser() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n//   const [editFormData, setEditFormData] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const usersData = await getAllUsers();\r\n//         setUsers(usersData);\r\n//       } catch (error) {\r\n//         console.error(\"Failed to fetch users:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleEditClick = (user) => {\r\n//     setEditingUser(user);\r\n//     setEditFormData({\r\n//       username: user.username,\r\n//       password: '', // Leave empty, only set if changing password\r\n//       firstName: user.firstName,\r\n//       lastName: user.lastName,\r\n//       email: user.email,\r\n//       phoneNumber: user.phoneNumber,\r\n//       roleId: user.role ? user.role.id : '',\r\n//       active: user.active,\r\n//     });\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditFormData({\r\n//       ...editFormData,\r\n//       [name]: name === \"active\" ? value === \"true\" : value, // Convert \"true\"/\"false\" to boolean\r\n//     });\r\n//   };\r\n  \r\n\r\n//   const handleUpdateSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       // Prepare the payload, making sure roleId is a number\r\n//       const updatePayload = {\r\n//         ...editFormData,\r\n//         roleId: Number(editFormData.roleId), // Ensure roleId is a number\r\n//       };\r\n  \r\n//       // Send the update request\r\n//       await updateUser(editingUser.id, updatePayload);\r\n  \r\n//       // Update the user list and close the form\r\n//       setUsers(users.map(user => (user.id === editingUser.id ? { ...editingUser, ...updatePayload } : user)));\r\n//       setEditingUser(null);\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user:\", error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleDelete = async (userId) => {\r\n//     try {\r\n//       await deleteUser(userId);\r\n//       setUsers(users.filter(user => user.id !== userId));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n\r\n//   return (\r\n//     <div className='Manage-user-list'>\r\n//         <VerticalMenu/>\r\n//         <Header/>\r\n//         <div className='box-Manage-users'>\r\n//           <div className =\"header-Manage-users\">\r\n//             <h2>STAFF</h2>\r\n//           </div>\r\n\r\n//           <div className='search-Manage-users'>\r\n//             <label htmlFor='search'>Search: </label>\r\n//             <input type='text' id='search' placeholder='Search Users..'/>\r\n//           </div>\r\n\r\n\r\n//           {users.length > 0 ? (\r\n//           <table className='Manage-users-table'>\r\n//             <thead>\r\n//             <tr>\r\n//               <th>Username</th>\r\n//               <th>First Name</th>\r\n//               <th>Last Name</th>\r\n//               <th>Email</th>\r\n//               <th>Phone Number</th>\r\n//               <th>Role</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {users.map(user => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.username}</td>\r\n//                 <td>{user.firstName}</td>\r\n//                 <td>{user.lastName}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.phoneNumber}</td>\r\n//                 <td>{user.role ? user.role.roleType : 'N/A'}</td>\r\n//                 <td>\r\n//                   <button onClick={() => handleEditClick(user)}>Update</button>\r\n//                   <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       ) : (\r\n//         <p className=\"no-users\">No users found</p>\r\n//       )}\r\n\r\n//           <div className='pagination-Manage-users'>\r\n//             <span> Showing 0 to 0 pf entire </span>\r\n\r\n//             <div className='button-Manage-users'>\r\n//               <button className='previous-button-Manage-users'>\r\n//                 Previous\r\n//               </button>\r\n\r\n//             <button className='next-button-Manage-users'>\r\n//               Next\r\n//             </button>\r\n//             {editingUser && (\r\n//   <div className=\"edit-user-form-container\">\r\n//     <h3>Edit User</h3>\r\n//     <form onSubmit={handleUpdateSubmit}>\r\n//       <label>Username:</label>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"username\"\r\n//         value={editFormData.username}\r\n//         onChange={handleInputChange}\r\n//       />\r\n//       <label>Password:</label>\r\n//       <input\r\n//         type=\"password\"\r\n//         name=\"password\"\r\n//         value={editFormData.password}\r\n//         onChange={handleInputChange}\r\n//       />\r\n//       <label>First Name:</label>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"firstName\"\r\n//         value={editFormData.firstName}\r\n//         onChange={handleInputChange}\r\n//       />\r\n//       <label>Last Name:</label>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"lastName\"\r\n//         value={editFormData.lastName}\r\n//         onChange={handleInputChange}\r\n//       />\r\n//       <label>Email:</label>\r\n//       <input\r\n//         type=\"email\"\r\n//         name=\"email\"\r\n//         value={editFormData.email}\r\n//         onChange={handleInputChange}\r\n//       />\r\n//       <label>Phone Number:</label>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"phoneNumber\"\r\n//         value={editFormData.phoneNumber}\r\n//         onChange={handleInputChange}\r\n//       />\r\n//       <label>Role:</label>\r\n//       <select\r\n//         name=\"roleId\"\r\n//         value={editFormData.roleId || ''}\r\n//         onChange={handleInputChange}\r\n//       >\r\n//         <option value=\"\">Select a role</option>\r\n//         <option value=\"1\">ADMIN</option>\r\n//         <option value=\"2\">STAFF</option>\r\n//         <option value=\"3\">DOCTOR</option>\r\n//       </select>\r\n//       <label>Active:</label>\r\n//       <select\r\n//         name=\"active\"\r\n//         value={editFormData.active}\r\n//         onChange={handleInputChange}\r\n//       >\r\n//         <option value={true}>Active</option>\r\n//         <option value={false}>Inactive</option>\r\n//       </select>\r\n//       <button type=\"submit\">Save</button>\r\n//       <button type=\"button\" onClick={() => setEditingUser(null)}>Cancel</button>\r\n//     </form>\r\n//   </div>\r\n// )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n      \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n"],"mappings":"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AAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAAhD,EAAA,CApZMD,uBAAuB;AAAAuD,EAAA,GAAvBvD,uBAAuB;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}