{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './PatientRegistrationForm.css';\n// import VerticalMenu from './Components/verticalmenu';\n// import Header from './Components/Header';\n\n// const PatientRegistrationForm = () => {\n//   const [gender, setGender] = useState('');\n//   const [guardianGender, setGuardianGender] = useState('');\n//   const [formData, setFormData] = useState({\n//     firstName: '',\n//     lastName: '',\n//     address: '',\n//     birthday: '',\n//     phoneNumber: '',\n//     guardianFirstName: '',\n//     guardianLastName: '',\n//     guardianAddress: '',\n//     guardianBirthday: '',\n//     guardianPhoneNumber: '',\n//   });\n//   const [patients, setPatients] = useState([]);\n//   const [editingPatientId, setEditingPatientId] = useState(null); // Track editing state\n\n//   // Fetch all patients on component load\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const data = await getAllUsers();\n//       setPatients(data);\n//     } catch (error) {\n//       console.error('Error fetching patients:', error);\n//     }\n//   };\n\n//   const handleGenderChange = (event) => {\n//     setGender(event.target.value);\n//   };\n\n//   const handleGuardianGenderChange = (event) => {\n//     setGuardianGender(event.target.value);\n//   };\n\n//   const handleChange = (event) => {\n//     setFormData({\n//       ...formData,\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async () => {\n//     try {\n//       if (editingPatientId) {\n//         // Update existing patient\n//         await updateUser(editingPatientId, { ...formData, gender, guardianGender });\n//         alert('Patient updated successfully!');\n//       } else {\n//         // Add new patient\n//         await AddUserModal({ ...formData, gender, guardianGender });\n//         alert('Patient added successfully!');\n//       }\n//       handleClear();\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error submitting form:', error);\n//       alert('Error occurred while saving patient data.');\n//     }\n//   };\n\n//   const handleEdit = (patient) => {\n//     setEditingPatientId(patient.id);\n//     setGender(patient.gender || '');\n//     setGuardianGender(patient.guardianGender || '');\n//     setFormData({\n//       firstName: patient.firstName,\n//       lastName: patient.lastName,\n//       address: patient.address,\n//       birthday: patient.birthday,\n//       phoneNumber: patient.phoneNumber,\n//       guardianFirstName: patient.guardianFirstName,\n//       guardianLastName: patient.guardianLastName,\n//       guardianAddress: patient.guardianAddress,\n//       guardianBirthday: patient.guardianBirthday,\n//       guardianPhoneNumber: patient.guardianPhoneNumber,\n//     });\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await deleteUser(id);\n//       alert('Patient deleted successfully!');\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error deleting patient:', error);\n//       alert('Error occurred while deleting patient.');\n//     }\n//   };\n\n//   const handleClear = () => {\n//     setEditingPatientId(null);\n//     setGender('');\n//     setGuardianGender('');\n//     setFormData({\n//       firstName: '',\n//       lastName: '',\n//       address: '',\n//       birthday: '',\n//       phoneNumber: '',\n//       guardianFirstName: '',\n//       guardianLastName: '',\n//       guardianAddress: '',\n//       guardianBirthday: '',\n//       guardianPhoneNumber: '',\n//     });\n//   };\n\n//   return (\n//     <div className=\"patient-registration\">\n//       <Header />\n//       <div className=\"sidebar\">\n//         <VerticalMenu />\n//       </div>\n\n//       <div className=\"main-contentP\">\n//         <div className=\"form-containerP\">\n//           <h2>{editingPatientId ? 'Edit Patient' : 'Patient Registration Form'}</h2>\n\n//           {/* Form for adding/editing patient */}\n//           <div className=\"form-section\">\n//             {/* Personal Details */}\n//             <div className=\"personal-details\">\n//               <h3>Personal Details</h3>\n//               <div className=\"input-group\">\n//                 <label>First Name</label>\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} />\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Last Name</label>\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} />\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Gender</label>\n//                 <select value={gender} onChange={handleGenderChange}>\n//                   <option value=\"\" disabled>Select Gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Address</label>\n//                 <input type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} />\n//               </div>\n//               {/* Additional personal fields */}\n//             </div>\n\n//             {/* Submit and Clear Buttons */}\n//             <div className=\"form-buttons\">\n//               <button className=\"submit-btn\" onClick={handleSubmit}>\n//                 {editingPatientId ? 'Update' : 'Submit'}\n//               </button>\n//               <button className=\"clear-btn\" onClick={handleClear}>Clear</button>\n//             </div>\n//           </div>\n\n//           {/* List of patients */}\n//           <div className=\"patient-list\">\n//             <h3>All Patients</h3>\n//             <ul>\n//               {patients.map((patient) => (\n//                 <li key={patient.id}>\n//                   {patient.firstName} {patient.lastName}\n//                   <button onClick={() => handleEdit(patient)}>Edit</button>\n//                   <button onClick={() => handleDelete(patient.id)}>Delete</button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // export default PatientRegistrationForm;\n\n// // import React, { useEffect, useState } from 'react'\n// // import VerticalMenu from './Components/verticalmenu'\n// // import Header from './Components/Header'\n// // import './ManageSystemUser.css';\n// // import { getAllUsers, updateUser, deleteUser } from './Components/api';\n\n// // export default function ManageSyatemUser() {\n// //   const [users, setUsers] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [editingUser, setEditingUser] = useState(null);\n// //   const [editFormData, setEditFormData] = useState({});\n\n// //   useEffect(() => {\n// //     const fetchUsers = async () => {\n// //       try {\n// //         const usersData = await getAllUsers();\n// //         setUsers(usersData);\n// //       } catch (error) {\n// //         console.error(\"Failed to fetch users:\", error);\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchUsers();\n// //   }, []);\n\n// //   const handleEditClick = (user) => {\n// //     setEditingUser(user);\n// //     setEditFormData({\n// //       username: user.username,\n// //       password: '', // Leave empty, only set if changing password\n// //       firstName: user.firstName,\n// //       lastName: user.lastName,\n// //       email: user.email,\n// //       phoneNumber: user.phoneNumber,\n// //       roleId: user.role ? user.role.id : '',\n// //       active: user.active,\n// //     });\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setEditFormData({\n// //       ...editFormData,\n// //       [name]: name === \"active\" ? value === \"true\" : value, // Convert \"true\"/\"false\" to boolean\n// //     });\n// //   };\n\n// //   const handleUpdateSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       // Prepare the payload, making sure roleId is a number\n// //       const updatePayload = {\n// //         ...editFormData,\n// //         roleId: Number(editFormData.roleId), // Ensure roleId is a number\n// //       };\n\n// //       // Send the update request\n// //       await updateUser(editingUser.id, updatePayload);\n\n// //       // Update the user list and close the form\n// //       setUsers(users.map(user => (user.id === editingUser.id ? { ...editingUser, ...updatePayload } : user)));\n// //       setEditingUser(null);\n// //     } catch (error) {\n// //       console.error(\"Error updating user:\", error);\n// //     }\n// //   };\n\n// //   const handleDelete = async (userId) => {\n// //     try {\n// //       await deleteUser(userId);\n// //       setUsers(users.filter(user => user.id !== userId));\n// //     } catch (error) {\n// //       console.error(\"Error deleting user:\", error);\n// //     }\n// //   };\n\n// //   if (loading) return <p>Loading...</p>;\n\n// //   return (\n// //     <div className='Manage-user-list'>\n// //         <VerticalMenu/>\n// //         <Header/>\n// //         <div className='box-Manage-users'>\n// //           <div className =\"header-Manage-users\">\n// //             <h2>STAFF</h2>\n// //           </div>\n\n// //           <div className='search-Manage-users'>\n// //             <label htmlFor='search'>Search: </label>\n// //             <input type='text' id='search' placeholder='Search Users..'/>\n// //           </div>\n\n// //           {users.length > 0 ? (\n// //           <table className='Manage-users-table'>\n// //             <thead>\n// //             <tr>\n// //               <th>Username</th>\n// //               <th>First Name</th>\n// //               <th>Last Name</th>\n// //               <th>Email</th>\n// //               <th>Phone Number</th>\n// //               <th>Role</th>\n// //               <th>Actions</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             {users.map(user => (\n// //               <tr key={user.id}>\n// //                 <td>{user.username}</td>\n// //                 <td>{user.firstName}</td>\n// //                 <td>{user.lastName}</td>\n// //                 <td>{user.email}</td>\n// //                 <td>{user.phoneNumber}</td>\n// //                 <td>{user.role ? user.role.roleType : 'N/A'}</td>\n// //                 <td>\n// //                   <button onClick={() => handleEditClick(user)}>Update</button>\n// //                   <button onClick={() => handleDelete(user.id)}>Delete</button>\n// //                 </td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //       ) : (\n// //         <p className=\"no-users\">No users found</p>\n// //       )}\n\n// //           <div className='pagination-Manage-users'>\n// //             <span> Showing 0 to 0 pf entire </span>\n\n// //             <div className='button-Manage-users'>\n// //               <button className='previous-button-Manage-users'>\n// //                 Previous\n// //               </button>\n\n// //             <button className='next-button-Manage-users'>\n// //               Next\n// //             </button>\n// //             {editingUser && (\n// //   <div className=\"edit-user-form-container\">\n// //     <h3>Edit User</h3>\n// //     <form onSubmit={handleUpdateSubmit}>\n// //       <label>Username:</label>\n// //       <input\n// //         type=\"text\"\n// //         name=\"username\"\n// //         value={editFormData.username}\n// //         onChange={handleInputChange}\n// //       />\n// //       <label>Password:</label>\n// //       <input\n// //         type=\"password\"\n// //         name=\"password\"\n// //         value={editFormData.password}\n// //         onChange={handleInputChange}\n// //       />\n// //       <label>First Name:</label>\n// //       <input\n// //         type=\"text\"\n// //         name=\"firstName\"\n// //         value={editFormData.firstName}\n// //         onChange={handleInputChange}\n// //       />\n// //       <label>Last Name:</label>\n// //       <input\n// //         type=\"text\"\n// //         name=\"lastName\"\n// //         value={editFormData.lastName}\n// //         onChange={handleInputChange}\n// //       />\n// //       <label>Email:</label>\n// //       <input\n// //         type=\"email\"\n// //         name=\"email\"\n// //         value={editFormData.email}\n// //         onChange={handleInputChange}\n// //       />\n// //       <label>Phone Number:</label>\n// //       <input\n// //         type=\"text\"\n// //         name=\"phoneNumber\"\n// //         value={editFormData.phoneNumber}\n// //         onChange={handleInputChange}\n// //       />\n// //       <label>Role:</label>\n// //       <select\n// //         name=\"roleId\"\n// //         value={editFormData.roleId || ''}\n// //         onChange={handleInputChange}\n// //       >\n// //         <option value=\"\">Select a role</option>\n// //         <option value=\"1\">ADMIN</option>\n// //         <option value=\"2\">STAFF</option>\n// //         <option value=\"3\">DOCTOR</option>\n// //       </select>\n// //       <label>Active:</label>\n// //       <select\n// //         name=\"active\"\n// //         value={editFormData.active}\n// //         onChange={handleInputChange}\n// //       >\n// //         <option value={true}>Active</option>\n// //         <option value={false}>Inactive</option>\n// //       </select>\n// //       <button type=\"submit\">Save</button>\n// //       <button type=\"button\" onClick={() => setEditingUser(null)}>Cancel</button>\n// //     </form>\n// //   </div>\n// // )}\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //     </div>\n// //   )\n// // }","map":{"version":3,"names":[],"sources":["C:/Users/Thanura Thilak/Desktop/firstp/src/PatientRegistrationForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './PatientRegistrationForm.css';\r\n// import VerticalMenu from './Components/verticalmenu';\r\n// import Header from './Components/Header';\r\n\r\n// const PatientRegistrationForm = () => {\r\n//   const [gender, setGender] = useState('');\r\n//   const [guardianGender, setGuardianGender] = useState('');\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     address: '',\r\n//     birthday: '',\r\n//     phoneNumber: '',\r\n//     guardianFirstName: '',\r\n//     guardianLastName: '',\r\n//     guardianAddress: '',\r\n//     guardianBirthday: '',\r\n//     guardianPhoneNumber: '',\r\n//   });\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [editingPatientId, setEditingPatientId] = useState(null); // Track editing state\r\n\r\n//   // Fetch all patients on component load\r\n//   useEffect(() => {\r\n//     fetchPatients();\r\n//   }, []);\r\n\r\n//   const fetchPatients = async () => {\r\n//     try {\r\n//       const data = await getAllUsers();\r\n//       setPatients(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching patients:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGenderChange = (event) => {\r\n//     setGender(event.target.value);\r\n//   };\r\n\r\n//   const handleGuardianGenderChange = (event) => {\r\n//     setGuardianGender(event.target.value);\r\n//   };\r\n\r\n//   const handleChange = (event) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [event.target.name]: event.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       if (editingPatientId) {\r\n//         // Update existing patient\r\n//         await updateUser(editingPatientId, { ...formData, gender, guardianGender });\r\n//         alert('Patient updated successfully!');\r\n//       } else {\r\n//         // Add new patient\r\n//         await AddUserModal({ ...formData, gender, guardianGender });\r\n//         alert('Patient added successfully!');\r\n//       }\r\n//       handleClear();\r\n//       fetchPatients();\r\n//     } catch (error) {\r\n//       console.error('Error submitting form:', error);\r\n//       alert('Error occurred while saving patient data.');\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (patient) => {\r\n//     setEditingPatientId(patient.id);\r\n//     setGender(patient.gender || '');\r\n//     setGuardianGender(patient.guardianGender || '');\r\n//     setFormData({\r\n//       firstName: patient.firstName,\r\n//       lastName: patient.lastName,\r\n//       address: patient.address,\r\n//       birthday: patient.birthday,\r\n//       phoneNumber: patient.phoneNumber,\r\n//       guardianFirstName: patient.guardianFirstName,\r\n//       guardianLastName: patient.guardianLastName,\r\n//       guardianAddress: patient.guardianAddress,\r\n//       guardianBirthday: patient.guardianBirthday,\r\n//       guardianPhoneNumber: patient.guardianPhoneNumber,\r\n//     });\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await deleteUser(id);\r\n//       alert('Patient deleted successfully!');\r\n//       fetchPatients();\r\n//     } catch (error) {\r\n//       console.error('Error deleting patient:', error);\r\n//       alert('Error occurred while deleting patient.');\r\n//     }\r\n//   };\r\n\r\n//   const handleClear = () => {\r\n//     setEditingPatientId(null);\r\n//     setGender('');\r\n//     setGuardianGender('');\r\n//     setFormData({\r\n//       firstName: '',\r\n//       lastName: '',\r\n//       address: '',\r\n//       birthday: '',\r\n//       phoneNumber: '',\r\n//       guardianFirstName: '',\r\n//       guardianLastName: '',\r\n//       guardianAddress: '',\r\n//       guardianBirthday: '',\r\n//       guardianPhoneNumber: '',\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"patient-registration\">\r\n//       <Header />\r\n//       <div className=\"sidebar\">\r\n//         <VerticalMenu />\r\n//       </div>\r\n\r\n//       <div className=\"main-contentP\">\r\n//         <div className=\"form-containerP\">\r\n//           <h2>{editingPatientId ? 'Edit Patient' : 'Patient Registration Form'}</h2>\r\n\r\n//           {/* Form for adding/editing patient */}\r\n//           <div className=\"form-section\">\r\n//             {/* Personal Details */}\r\n//             <div className=\"personal-details\">\r\n//               <h3>Personal Details</h3>\r\n//               <div className=\"input-group\">\r\n//                 <label>First Name</label>\r\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Last Name</label>\r\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Gender</label>\r\n//                 <select value={gender} onChange={handleGenderChange}>\r\n//                   <option value=\"\" disabled>Select Gender</option>\r\n//                   <option value=\"Male\">Male</option>\r\n//                   <option value=\"Female\">Female</option>\r\n//                   <option value=\"Other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Address</label>\r\n//                 <input type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} />\r\n//               </div>\r\n//               {/* Additional personal fields */}\r\n//             </div>\r\n\r\n//             {/* Submit and Clear Buttons */}\r\n//             <div className=\"form-buttons\">\r\n//               <button className=\"submit-btn\" onClick={handleSubmit}>\r\n//                 {editingPatientId ? 'Update' : 'Submit'}\r\n//               </button>\r\n//               <button className=\"clear-btn\" onClick={handleClear}>Clear</button>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* List of patients */}\r\n//           <div className=\"patient-list\">\r\n//             <h3>All Patients</h3>\r\n//             <ul>\r\n//               {patients.map((patient) => (\r\n//                 <li key={patient.id}>\r\n//                   {patient.firstName} {patient.lastName}\r\n//                   <button onClick={() => handleEdit(patient)}>Edit</button>\r\n//                   <button onClick={() => handleDelete(patient.id)}>Delete</button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // export default PatientRegistrationForm;\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react'\r\n// // import VerticalMenu from './Components/verticalmenu'\r\n// // import Header from './Components/Header'\r\n// // import './ManageSystemUser.css';\r\n// // import { getAllUsers, updateUser, deleteUser } from './Components/api';\r\n\r\n// // export default function ManageSyatemUser() {\r\n// //   const [users, setUsers] = useState([]);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [editingUser, setEditingUser] = useState(null);\r\n// //   const [editFormData, setEditFormData] = useState({});\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchUsers = async () => {\r\n// //       try {\r\n// //         const usersData = await getAllUsers();\r\n// //         setUsers(usersData);\r\n// //       } catch (error) {\r\n// //         console.error(\"Failed to fetch users:\", error);\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchUsers();\r\n// //   }, []);\r\n\r\n// //   const handleEditClick = (user) => {\r\n// //     setEditingUser(user);\r\n// //     setEditFormData({\r\n// //       username: user.username,\r\n// //       password: '', // Leave empty, only set if changing password\r\n// //       firstName: user.firstName,\r\n// //       lastName: user.lastName,\r\n// //       email: user.email,\r\n// //       phoneNumber: user.phoneNumber,\r\n// //       roleId: user.role ? user.role.id : '',\r\n// //       active: user.active,\r\n// //     });\r\n// //   };\r\n\r\n// //   const handleInputChange = (e) => {\r\n// //     const { name, value } = e.target;\r\n// //     setEditFormData({\r\n// //       ...editFormData,\r\n// //       [name]: name === \"active\" ? value === \"true\" : value, // Convert \"true\"/\"false\" to boolean\r\n// //     });\r\n// //   };\r\n  \r\n\r\n// //   const handleUpdateSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       // Prepare the payload, making sure roleId is a number\r\n// //       const updatePayload = {\r\n// //         ...editFormData,\r\n// //         roleId: Number(editFormData.roleId), // Ensure roleId is a number\r\n// //       };\r\n  \r\n// //       // Send the update request\r\n// //       await updateUser(editingUser.id, updatePayload);\r\n  \r\n// //       // Update the user list and close the form\r\n// //       setUsers(users.map(user => (user.id === editingUser.id ? { ...editingUser, ...updatePayload } : user)));\r\n// //       setEditingUser(null);\r\n// //     } catch (error) {\r\n// //       console.error(\"Error updating user:\", error);\r\n// //     }\r\n// //   };\r\n  \r\n\r\n// //   const handleDelete = async (userId) => {\r\n// //     try {\r\n// //       await deleteUser(userId);\r\n// //       setUsers(users.filter(user => user.id !== userId));\r\n// //     } catch (error) {\r\n// //       console.error(\"Error deleting user:\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) return <p>Loading...</p>;\r\n\r\n\r\n// //   return (\r\n// //     <div className='Manage-user-list'>\r\n// //         <VerticalMenu/>\r\n// //         <Header/>\r\n// //         <div className='box-Manage-users'>\r\n// //           <div className =\"header-Manage-users\">\r\n// //             <h2>STAFF</h2>\r\n// //           </div>\r\n\r\n// //           <div className='search-Manage-users'>\r\n// //             <label htmlFor='search'>Search: </label>\r\n// //             <input type='text' id='search' placeholder='Search Users..'/>\r\n// //           </div>\r\n\r\n\r\n// //           {users.length > 0 ? (\r\n// //           <table className='Manage-users-table'>\r\n// //             <thead>\r\n// //             <tr>\r\n// //               <th>Username</th>\r\n// //               <th>First Name</th>\r\n// //               <th>Last Name</th>\r\n// //               <th>Email</th>\r\n// //               <th>Phone Number</th>\r\n// //               <th>Role</th>\r\n// //               <th>Actions</th>\r\n// //             </tr>\r\n// //           </thead>\r\n// //           <tbody>\r\n// //             {users.map(user => (\r\n// //               <tr key={user.id}>\r\n// //                 <td>{user.username}</td>\r\n// //                 <td>{user.firstName}</td>\r\n// //                 <td>{user.lastName}</td>\r\n// //                 <td>{user.email}</td>\r\n// //                 <td>{user.phoneNumber}</td>\r\n// //                 <td>{user.role ? user.role.roleType : 'N/A'}</td>\r\n// //                 <td>\r\n// //                   <button onClick={() => handleEditClick(user)}>Update</button>\r\n// //                   <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n// //                 </td>\r\n// //               </tr>\r\n// //             ))}\r\n// //           </tbody>\r\n// //         </table>\r\n// //       ) : (\r\n// //         <p className=\"no-users\">No users found</p>\r\n// //       )}\r\n\r\n// //           <div className='pagination-Manage-users'>\r\n// //             <span> Showing 0 to 0 pf entire </span>\r\n\r\n// //             <div className='button-Manage-users'>\r\n// //               <button className='previous-button-Manage-users'>\r\n// //                 Previous\r\n// //               </button>\r\n\r\n// //             <button className='next-button-Manage-users'>\r\n// //               Next\r\n// //             </button>\r\n// //             {editingUser && (\r\n// //   <div className=\"edit-user-form-container\">\r\n// //     <h3>Edit User</h3>\r\n// //     <form onSubmit={handleUpdateSubmit}>\r\n// //       <label>Username:</label>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"username\"\r\n// //         value={editFormData.username}\r\n// //         onChange={handleInputChange}\r\n// //       />\r\n// //       <label>Password:</label>\r\n// //       <input\r\n// //         type=\"password\"\r\n// //         name=\"password\"\r\n// //         value={editFormData.password}\r\n// //         onChange={handleInputChange}\r\n// //       />\r\n// //       <label>First Name:</label>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"firstName\"\r\n// //         value={editFormData.firstName}\r\n// //         onChange={handleInputChange}\r\n// //       />\r\n// //       <label>Last Name:</label>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"lastName\"\r\n// //         value={editFormData.lastName}\r\n// //         onChange={handleInputChange}\r\n// //       />\r\n// //       <label>Email:</label>\r\n// //       <input\r\n// //         type=\"email\"\r\n// //         name=\"email\"\r\n// //         value={editFormData.email}\r\n// //         onChange={handleInputChange}\r\n// //       />\r\n// //       <label>Phone Number:</label>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         name=\"phoneNumber\"\r\n// //         value={editFormData.phoneNumber}\r\n// //         onChange={handleInputChange}\r\n// //       />\r\n// //       <label>Role:</label>\r\n// //       <select\r\n// //         name=\"roleId\"\r\n// //         value={editFormData.roleId || ''}\r\n// //         onChange={handleInputChange}\r\n// //       >\r\n// //         <option value=\"\">Select a role</option>\r\n// //         <option value=\"1\">ADMIN</option>\r\n// //         <option value=\"2\">STAFF</option>\r\n// //         <option value=\"3\">DOCTOR</option>\r\n// //       </select>\r\n// //       <label>Active:</label>\r\n// //       <select\r\n// //         name=\"active\"\r\n// //         value={editFormData.active}\r\n// //         onChange={handleInputChange}\r\n// //       >\r\n// //         <option value={true}>Active</option>\r\n// //         <option value={false}>Inactive</option>\r\n// //       </select>\r\n// //       <button type=\"submit\">Save</button>\r\n// //       <button type=\"button\" onClick={() => setEditingUser(null)}>Cancel</button>\r\n// //     </form>\r\n// //   </div>\r\n// // )}\r\n// //             </div>\r\n// //           </div>\r\n// //         </div>\r\n      \r\n// //     </div>\r\n// //   )\r\n// // }\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}