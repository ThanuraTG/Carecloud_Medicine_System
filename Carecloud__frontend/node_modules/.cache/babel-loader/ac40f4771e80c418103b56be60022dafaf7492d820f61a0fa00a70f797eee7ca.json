{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './PatientRegistrationForm.css';\n// import VerticalMenu from './Components/verticalmenu';\n// import Header from './Components/Header';\n// import { AddUserModal, updateUser, deleteUser, getAllUsers } from './api';\n\n// const PatientRegistrationForm = () => {\n//   const [gender, setGender] = useState('');\n//   const [guardianGender, setGuardianGender] = useState('');\n//   const [formData, setFormData] = useState({\n//     firstName: '',\n//     lastName: '',\n//     address: '',\n//     birthday: '',\n//     phoneNumber: '',\n//     guardianFirstName: '',\n//     guardianLastName: '',\n//     guardianAddress: '',\n//     guardianBirthday: '',\n//     guardianPhoneNumber: '',\n//   });\n//   const [patients, setPatients] = useState([]);\n//   const [editingPatientId, setEditingPatientId] = useState(null); // Track editing state\n\n//   // Fetch all patients on component load\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const data = await getAllUsers();\n//       setPatients(data);\n//     } catch (error) {\n//       console.error('Error fetching patients:', error);\n//     }\n//   };\n\n//   const handleGenderChange = (event) => {\n//     setGender(event.target.value);\n//   };\n\n//   const handleGuardianGenderChange = (event) => {\n//     setGuardianGender(event.target.value);\n//   };\n\n//   const handleChange = (event) => {\n//     setFormData({\n//       ...formData,\n//       [event.target.name]: event.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async () => {\n//     try {\n//       if (editingPatientId) {\n//         // Update existing patient\n//         await updateUser(editingPatientId, { ...formData, gender, guardianGender });\n//         alert('Patient updated successfully!');\n//       } else {\n//         // Add new patient\n//         await AddUserModal({ ...formData, gender, guardianGender });\n//         alert('Patient added successfully!');\n//       }\n//       handleClear();\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error submitting form:', error);\n//       alert('Error occurred while saving patient data.');\n//     }\n//   };\n\n//   const handleEdit = (patient) => {\n//     setEditingPatientId(patient.id);\n//     setGender(patient.gender || '');\n//     setGuardianGender(patient.guardianGender || '');\n//     setFormData({\n//       firstName: patient.firstName,\n//       lastName: patient.lastName,\n//       address: patient.address,\n//       birthday: patient.birthday,\n//       phoneNumber: patient.phoneNumber,\n//       guardianFirstName: patient.guardianFirstName,\n//       guardianLastName: patient.guardianLastName,\n//       guardianAddress: patient.guardianAddress,\n//       guardianBirthday: patient.guardianBirthday,\n//       guardianPhoneNumber: patient.guardianPhoneNumber,\n//     });\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await deleteUser(id);\n//       alert('Patient deleted successfully!');\n//       fetchPatients();\n//     } catch (error) {\n//       console.error('Error deleting patient:', error);\n//       alert('Error occurred while deleting patient.');\n//     }\n//   };\n\n//   const handleClear = () => {\n//     setEditingPatientId(null);\n//     setGender('');\n//     setGuardianGender('');\n//     setFormData({\n//       firstName: '',\n//       lastName: '',\n//       address: '',\n//       birthday: '',\n//       phoneNumber: '',\n//       guardianFirstName: '',\n//       guardianLastName: '',\n//       guardianAddress: '',\n//       guardianBirthday: '',\n//       guardianPhoneNumber: '',\n//     });\n//   };\n\n//   return (\n//     <div className=\"patient-registration\">\n//       <Header />\n//       <div className=\"sidebar\">\n//         <VerticalMenu />\n//       </div>\n\n//       <div className=\"main-contentP\">\n//         <div className=\"form-containerP\">\n//           <h2>{editingPatientId ? 'Edit Patient' : 'Patient Registration Form'}</h2>\n\n//           {/* Form for adding/editing patient */}\n//           <div className=\"form-section\">\n//             {/* Personal Details */}\n//             <div className=\"personal-details\">\n//               <h3>Personal Details</h3>\n//               <div className=\"input-group\">\n//                 <label>First Name</label>\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} />\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Last Name</label>\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} />\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Gender</label>\n//                 <select value={gender} onChange={handleGenderChange}>\n//                   <option value=\"\" disabled>Select Gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               <div className=\"input-group\">\n//                 <label>Address</label>\n//                 <input type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} />\n//               </div>\n//               {/* Additional personal fields */}\n//             </div>\n\n//             {/* Submit and Clear Buttons */}\n//             <div className=\"form-buttons\">\n//               <button className=\"submit-btn\" onClick={handleSubmit}>\n//                 {editingPatientId ? 'Update' : 'Submit'}\n//               </button>\n//               <button className=\"clear-btn\" onClick={handleClear}>Clear</button>\n//             </div>\n//           </div>\n\n//           {/* List of patients */}\n//           <div className=\"patient-list\">\n//             <h3>All Patients</h3>\n//             <ul>\n//               {patients.map((patient) => (\n//                 <li key={patient.id}>\n//                   {patient.firstName} {patient.lastName}\n//                   <button onClick={() => handleEdit(patient)}>Edit</button>\n//                   <button onClick={() => handleDelete(patient.id)}>Delete</button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PatientRegistrationForm;","map":{"version":3,"names":[],"sources":["C:/Users/Thanura Thilak/Desktop/firstp/src/PatientRegistrationForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './PatientRegistrationForm.css';\r\n// import VerticalMenu from './Components/verticalmenu';\r\n// import Header from './Components/Header';\r\n// import { AddUserModal, updateUser, deleteUser, getAllUsers } from './api';\r\n\r\n// const PatientRegistrationForm = () => {\r\n//   const [gender, setGender] = useState('');\r\n//   const [guardianGender, setGuardianGender] = useState('');\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     address: '',\r\n//     birthday: '',\r\n//     phoneNumber: '',\r\n//     guardianFirstName: '',\r\n//     guardianLastName: '',\r\n//     guardianAddress: '',\r\n//     guardianBirthday: '',\r\n//     guardianPhoneNumber: '',\r\n//   });\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [editingPatientId, setEditingPatientId] = useState(null); // Track editing state\r\n\r\n//   // Fetch all patients on component load\r\n//   useEffect(() => {\r\n//     fetchPatients();\r\n//   }, []);\r\n\r\n//   const fetchPatients = async () => {\r\n//     try {\r\n//       const data = await getAllUsers();\r\n//       setPatients(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching patients:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGenderChange = (event) => {\r\n//     setGender(event.target.value);\r\n//   };\r\n\r\n//   const handleGuardianGenderChange = (event) => {\r\n//     setGuardianGender(event.target.value);\r\n//   };\r\n\r\n//   const handleChange = (event) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [event.target.name]: event.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       if (editingPatientId) {\r\n//         // Update existing patient\r\n//         await updateUser(editingPatientId, { ...formData, gender, guardianGender });\r\n//         alert('Patient updated successfully!');\r\n//       } else {\r\n//         // Add new patient\r\n//         await AddUserModal({ ...formData, gender, guardianGender });\r\n//         alert('Patient added successfully!');\r\n//       }\r\n//       handleClear();\r\n//       fetchPatients();\r\n//     } catch (error) {\r\n//       console.error('Error submitting form:', error);\r\n//       alert('Error occurred while saving patient data.');\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (patient) => {\r\n//     setEditingPatientId(patient.id);\r\n//     setGender(patient.gender || '');\r\n//     setGuardianGender(patient.guardianGender || '');\r\n//     setFormData({\r\n//       firstName: patient.firstName,\r\n//       lastName: patient.lastName,\r\n//       address: patient.address,\r\n//       birthday: patient.birthday,\r\n//       phoneNumber: patient.phoneNumber,\r\n//       guardianFirstName: patient.guardianFirstName,\r\n//       guardianLastName: patient.guardianLastName,\r\n//       guardianAddress: patient.guardianAddress,\r\n//       guardianBirthday: patient.guardianBirthday,\r\n//       guardianPhoneNumber: patient.guardianPhoneNumber,\r\n//     });\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await deleteUser(id);\r\n//       alert('Patient deleted successfully!');\r\n//       fetchPatients();\r\n//     } catch (error) {\r\n//       console.error('Error deleting patient:', error);\r\n//       alert('Error occurred while deleting patient.');\r\n//     }\r\n//   };\r\n\r\n//   const handleClear = () => {\r\n//     setEditingPatientId(null);\r\n//     setGender('');\r\n//     setGuardianGender('');\r\n//     setFormData({\r\n//       firstName: '',\r\n//       lastName: '',\r\n//       address: '',\r\n//       birthday: '',\r\n//       phoneNumber: '',\r\n//       guardianFirstName: '',\r\n//       guardianLastName: '',\r\n//       guardianAddress: '',\r\n//       guardianBirthday: '',\r\n//       guardianPhoneNumber: '',\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"patient-registration\">\r\n//       <Header />\r\n//       <div className=\"sidebar\">\r\n//         <VerticalMenu />\r\n//       </div>\r\n\r\n//       <div className=\"main-contentP\">\r\n//         <div className=\"form-containerP\">\r\n//           <h2>{editingPatientId ? 'Edit Patient' : 'Patient Registration Form'}</h2>\r\n\r\n//           {/* Form for adding/editing patient */}\r\n//           <div className=\"form-section\">\r\n//             {/* Personal Details */}\r\n//             <div className=\"personal-details\">\r\n//               <h3>Personal Details</h3>\r\n//               <div className=\"input-group\">\r\n//                 <label>First Name</label>\r\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Last Name</label>\r\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Gender</label>\r\n//                 <select value={gender} onChange={handleGenderChange}>\r\n//                   <option value=\"\" disabled>Select Gender</option>\r\n//                   <option value=\"Male\">Male</option>\r\n//                   <option value=\"Female\">Female</option>\r\n//                   <option value=\"Other\">Other</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div className=\"input-group\">\r\n//                 <label>Address</label>\r\n//                 <input type=\"text\" name=\"address\" value={formData.address} onChange={handleChange} />\r\n//               </div>\r\n//               {/* Additional personal fields */}\r\n//             </div>\r\n\r\n//             {/* Submit and Clear Buttons */}\r\n//             <div className=\"form-buttons\">\r\n//               <button className=\"submit-btn\" onClick={handleSubmit}>\r\n//                 {editingPatientId ? 'Update' : 'Submit'}\r\n//               </button>\r\n//               <button className=\"clear-btn\" onClick={handleClear}>Clear</button>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* List of patients */}\r\n//           <div className=\"patient-list\">\r\n//             <h3>All Patients</h3>\r\n//             <ul>\r\n//               {patients.map((patient) => (\r\n//                 <li key={patient.id}>\r\n//                   {patient.firstName} {patient.lastName}\r\n//                   <button onClick={() => handleEdit(patient)}>Edit</button>\r\n//                   <button onClick={() => handleDelete(patient.id)}>Delete</button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PatientRegistrationForm;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}