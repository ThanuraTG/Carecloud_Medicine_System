{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uvindu Pasan\\\\Desktop\\\\firstp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginPage from './LoginPage'; // Ensure the path is correct\nimport Dashboard from './Dashboard';\nimport VerticalMenu from './VerticalMenu'; // Sidebar component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuConfig = {\n  doctor: [\"Consultation\"],\n  nurse: [\"Patients\", \"Laboratory\", \"Account\", \"Pharmacy\", \"Report\"],\n  developer: [\"Patients\", \"Consultation\", \"Laboratory\", \"Account\", \"Pharmacy\", \"Report\", \"Set Up\"]\n};\nfunction App() {\n  _s();\n  const [role, setRole] = useState(null); // Manage role state here\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Manage login state\n\n  // Simulate login success and determine role\n  const handleLoginSuccess = username => {\n    setIsLoggedIn(true);\n    // Set role based on username (You can replace this with actual logic)\n    switch (username.toLowerCase()) {\n      case 'doctor':\n        setRole('doctor');\n        break;\n      case 'nurse':\n        setRole('nurse');\n        break;\n      case 'developer':\n        setRole('developer');\n        break;\n      default:\n        setRole('developer');\n      // Default role if none matches\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [isLoggedIn && role ? /*#__PURE__*/_jsxDEV(VerticalMenu, {\n        role: role,\n        menuConfig: menuConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // Pass the role to sidebar component\n      : null, /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign in\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Welcome \", role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EcevFNo6WrmuHTUXbsgJ31h0D+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","LoginPage","Dashboard","VerticalMenu","jsxDEV","_jsxDEV","menuConfig","doctor","nurse","developer","App","_s","role","setRole","isLoggedIn","setIsLoggedIn","handleLoginSuccess","username","toLowerCase","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/Uvindu Pasan/Desktop/firstp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginPage from './LoginPage';  // Ensure the path is correct\nimport Dashboard from './Dashboard'; \nimport VerticalMenu from './VerticalMenu';  // Sidebar component\nimport './App.css';\n\nconst menuConfig = {\n  doctor: [\"Consultation\"],\n  nurse: [\"Patients\", \"Laboratory\", \"Account\", \"Pharmacy\", \"Report\"],\n  developer: [\n    \"Patients\",\n    \"Consultation\",\n    \"Laboratory\",\n    \"Account\",\n    \"Pharmacy\",\n    \"Report\",\n    \"Set Up\",\n  ],\n};\n\nfunction App() {\n  const [role, setRole] = useState(null);  // Manage role state here\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Manage login state\n\n  // Simulate login success and determine role\n  const handleLoginSuccess = (username) => {\n    setIsLoggedIn(true);\n    // Set role based on username (You can replace this with actual logic)\n    switch (username.toLowerCase()) {\n      case 'doctor':\n        setRole('doctor');\n        break;\n      case 'nurse':\n        setRole('nurse');\n        break;\n      case 'developer':\n        setRole('developer');\n        break;\n      default:\n        setRole('developer'); // Default role if none matches\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {isLoggedIn && role ? (\n          <VerticalMenu role={role} menuConfig={menuConfig} /> // Pass the role to sidebar component\n        ) : null}\n        \n        <Routes>\n          <Route path=\"/\" element={<LoginPage onLoginSuccess={handleLoginSuccess} />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/sign in\" element={<div>Welcome {role}</div>} />  {/* Replace with your main dashboard */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}