{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uvindu Pasan\\\\Desktop\\\\firstp\\\\src\\\\LogingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Logingpage.css';\nimport backgroundLogo from './images/Carecloud.png';\nimport signinIcon from './images/signin.png';\nimport guideinfor from './images/downlodge.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState(''); // Add state for role\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSignIn = e => {\n    e.preventDefault();\n    if (!username || !password || !role) {\n      setError('All fields are required');\n    } else {\n      setError('');\n      // Trigger the onLogin function to set the user's role\n      onLogin(role);\n      // Navigate to the dashboard or home page\n      navigate('/sign in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: backgroundLogo,\n          alt: \"Company Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"CARE CLOUD \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 26\n          }, this), \"HEALTH RECORD SYSTEM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-form\",\n          onSubmit: handleSignIn,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            className: \"input-field\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            placeholder: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"input-field\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            className: \"input-field\",\n            value: role,\n            onChange: e => setRole(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"doctor\",\n              children: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nurse\",\n              children: \"Nurse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"developer\",\n              children: \"Developer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sign-in-button\",\n              type: \"submit\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: signinIcon,\n                alt: \"Sign In Icon\",\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), \"Sign In\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"user-guide-button\",\n              type: \"button\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: guideinfor,\n                alt: \"Guide Information\",\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), \"User Guide\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"UNDTeaMVh5Zh2PoaVq5W19mmksk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","backgroundLogo","signinIcon","guideinfor","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","username","setUsername","password","setPassword","role","setRole","error","setError","navigate","handleSignIn","e","preventDefault","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Uvindu Pasan/Desktop/firstp/src/LogingPage.jsx"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Logingpage.css';\r\nimport backgroundLogo from './images/Carecloud.png';\r\nimport signinIcon from './images/signin.png';  \r\nimport guideinfor from './images/downlodge.png';\r\n\r\nconst LoginPage = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState(''); // Add state for role\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n    if (!username || !password || !role) {\r\n      setError('All fields are required');\r\n    } else {\r\n      setError('');\r\n      // Trigger the onLogin function to set the user's role\r\n      onLogin(role);\r\n      // Navigate to the dashboard or home page\r\n      navigate('/sign in');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"overlay\">\r\n        <div className=\"logo\">\r\n          <img src={backgroundLogo} alt=\"Company Logo\" />\r\n        </div>\r\n        <div className=\"logo-container\">\r\n          <h1>CARE CLOUD <br/>HEALTH RECORD SYSTEM</h1>\r\n        </div>\r\n        <div className=\"login-box\">\r\n          <form className=\"login-form\" onSubmit={handleSignIn}>\r\n            <label htmlFor=\"username\"></label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"username\" \r\n              className=\"input-field\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)} \r\n              required \r\n              placeholder=\"User Name\" \r\n            />\r\n\r\n            <label htmlFor=\"password\"></label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              className=\"input-field\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)} \r\n              required \r\n              placeholder=\"Password\" \r\n            />\r\n            \r\n            {/* Role Selection */}\r\n            <label htmlFor=\"role\">Role</label>\r\n            <select \r\n              id=\"role\" \r\n              className=\"input-field\" \r\n              value={role} \r\n              onChange={(e) => setRole(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Role</option>\r\n              <option value=\"doctor\">Doctor</option>\r\n              <option value=\"nurse\">Nurse</option>\r\n              <option value=\"developer\">Developer</option>\r\n            </select>\r\n\r\n            {error && <p className='error-message'>{error}</p>}\r\n\r\n            <div className=\"button-container\">\r\n              <button className=\"sign-in-button\" type=\"submit\">\r\n                <img src={signinIcon} alt=\"Sign In Icon\" className=\"button-icon\" />\r\n                Sign In\r\n              </button>\r\n\r\n              <button className=\"user-guide-button\" type=\"button\">\r\n                <img src={guideinfor} alt=\"Guide Information\" className=\"button-icon\" />\r\n                User Guide\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}