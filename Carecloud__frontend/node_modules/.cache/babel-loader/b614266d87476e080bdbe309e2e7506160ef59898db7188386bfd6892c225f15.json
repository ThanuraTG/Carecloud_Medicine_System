{"ast":null,"code":"// import { Dialog, DialogContent, DialogTitle } from '@mui/material';\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import '../css/additembutton.css';\n\n// export default function Additemb() {\n\n// //database connect part\n//     const [no,setNo]=useState('')\n//     const [description,setDescription]=useState('')\n//     const [total,setTotal]=useState('')\n//     const [billdetails,setBilldetails]=useState('')\n//     const [data,setData]=useState([])\n//     const [amo,setAmo] =useState(0)\n//     const [balance,setBalance]=useState(0)\n//     const [advance,setAdvance]=useState()\n//     const [updatebox,setUpdatebox]=useState(false)\n//     const [selectitem,setSelectitem]=useState(null)\n//     const Navigate = useNavigate();\n\n// //save item button method\n//     function savedbdata(e){\n//         e.preventDefault()\n//         const billdetail={description,total}\n//         console.log(billdetail)\n//         fetch(\"http://localhost:8080/api/v1/bill/save\",{\n//             method:\"POST\",\n//             headers:{\"Content-Type\":\"application/json\"},\n//             body:JSON.stringify(billdetail)\n//         })\n//         .then(()=>{\n//             console.log(\"new bill added successfully.\")\n//         })\n//     }\n\n// //get table method\n//     const fetchtable =()=>{\n//         fetch(\"http://localhost:8080/api/v1/bill/get\")\n//         .then(res => res.json())\n//         .then((result) => {\n//             setData(result);\n//         });\n//     }\n//     useEffect(() => {\n//         fetchtable();\n//     })\n//     useEffect(() => {\n//         const totalSum = data.reduce((sum,item)=>sum + parseFloat(item.total || 0), 0);\n//         setAmo(totalSum);\n//     },[data])\n\n// //delete save data method\n//     const hadeldelete = (no) =>{\n//         fetch(\"http://localhost:8080/api/v1/bill/delete/\"+no,{\n//             method:\"DELETE\",\n//             headers:{\"Content-Type\":\"application/json\"},\n//             body:JSON.stringify(hadeldelete)\n//         })\n//         .then(res=>{\n//             alert(\"Bill deleted successfully.\")\n//         })\n//         .catch(er=>console.log(er));\n//     }\n// //update save data method\n//     const openUpdateDialog =(item)=>{\n//         setSelectitem(item);\n//         setUpdatebox(true);\n//     };\n\n//     const hadelUpdate = ()=>{\n//         if (selectitem){\n//             fetch(\"http://localhost:8080/api/v1/bill/update\",{\n//                 method :\"PUT\",\n//                 headers:{\"Content-Type\":\"application/json\"},\n//                 body:JSON.stringify(selectitem),\n//             })\n//             .then(()=>{\n//                 alert(\"Update Successfully.\");\n//                 setUpdatebox(false);\n//                 fetchtable();\n//             })\n//             .catch((err)=>console.log(err));\n//         }\n//     }\n// //alance method\n//     useEffect(()=>{\n//         const calcu = amo - (parseFloat(advance) || 0);\n//         setBalance(calcu);\n//     },[amo,advance])\n// //dropdown menu part\n//     const options =[\n//         {label:\"Admission Charges\", value:1},\n//         {label:\"General Nursing Care\", value:2},\n//         {label:\"Doctor and Room Charges\", value:3},\n//         {label:\"Pharmacy Charges\", value:4},\n//         {label:\"X Ray\", value:5},\n//         {label:\"Laboratory\", value:6},\n//         {label:\"ECG\", value:7},\n//         {label:\"Other Charges\", value:8}\n//     ]\n//     function hadelclick(event){\n//         setDescription(event.target.value)\n//     }\n\n// // interface body part\n//     return (\n//         <div className='body'>\n//             <main className='main_box'>\n//                 <section className='box_header'>\n//                     <div className='fo1'>\n//                         <form >\n//                             <div className=\"mb-3\">\n//                                 <label for=\"input_1\" class=\"form-label\">Description : </label>\n//                                 <div class=\"btn-group\">\n//                                     <select className='form-select' onChange={hadelclick}>\n//                                         {options.map(option =>(\n//                                             <option >{option.label}</option>\n//                                         ))}\n//                                     </select>\n//                                     <input type='text' value={description} onChange={(e)=>setDescription(e.target.value)} placeholder='Description Charges'/>\n//                                 </div>\n//                             </div>\n//                             <div className=\"input-amount\">\n//                                 <label for=\"input_2\" class=\"form-label\">Amount : </label>\n//                                 <span >Rs </span>\n//                                 <input  type=\"number\" value={total} onChange={(e)=>setTotal(e.target.value)} placeholder=\"0,000\" />\n//                                 <span >.00</span>\n//                                 <div className='item-button'>\n//                                     <button type=\"button\" class=\"btn btn-outline-info\" onClick={savedbdata}>Add Item</button>\n//                                     <button type=\"button\" class=\"btn btn-outline-success\" onClick={()=> Navigate(\"/Printinvoce\")}>Generate Invoice</button>\n//                                 </div>\n//                             </div>\n//                         </form>\n//                     </div>\n//                     <div className='fo2'>\n//                         <form>\n//                             <div className='but'>\n//                                 <button type=\"button\" class=\"btn btn-danger\">All Delete</button>\n//                             </div>\n//                             <div className=\"tota\">\n//                                 <label>Total Amount :</label>\n//                                     <span >Rs</span>\n//                                     <input value={amo} placeholder='0,000'/>\n//                                     <span >.00</span>\n//                                 <label>Advance :</label>\n//                                     <span >Rs</span>\n//                                     <input value={advance} placeholder='0,000' onChange={(e)=>setAdvance(e.target.value)} />\n//                                     <span >.00</span>\n//                                 <label>Balance be Paid :</label>\n//                                     <span >Rs</span>\n//                                     <input  value={balance} placeholder='0,000'/>\n//                                     <span >.00</span>\n//                             </div>\n//                         </form>\n//                     </div>\n//                 </section>\n//                 <section className='box_body'>\n//                     <table>\n//                         <thead>\n//                             <tr>\n//                                 <th className='th1'>No</th>\n//                                 <th className='th2'>Description</th>\n//                                 <th className='th3'>Total</th>\n//                                 <th className='th4'>Action</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {data.map(billdetail=>(\n//                                 <tr>\n//                                     <td className='div1'>{billdetail.no}</td>\n//                                     <td className='div2'>{billdetail.description}</td>\n//                                     <td className='div3'>Rs {billdetail.total}.00</td>\n//                                     <td className='div4'>\n//                                     <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => hadeldelete(billdetail.no)}>Remove</button>\n//                                     <button type=\"button\" class=\"btn btn-outline-warning\" onClick={()=>openUpdateDialog(billdetail)}>Update</button>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </section>\n//             </main>\n\n//             {selectitem && (\n//                 <Dialog open={updatebox} onClose={() => setUpdatebox(false)}>\n//                     <DialogTitle>\n//                         <div className='title'>\n//                             <h3>Update Data</h3>\n//                             <button type=\"button\" class=\"btn btn-outline-danger\" onClick={()=>setUpdatebox(false)}>Close</button>\n//                         </div>\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         <div className='body2'>\n//                             <div className='la1'>\n//                                 <label>No :</label>\n//                                 <input type='number' value={selectitem.no} onChange={(e) => setSelectitem({ ...selectitem, no: e.target.value})} disabled/>\n//                             </div>\n//                             <div className='la2'>\n//                                 <label>Description :</label>\n//                                 <input type='text' value={selectitem.description} onChange={(e) => setSelectitem({ ...selectitem, description: e.target.value})} />\n//                             </div>\n//                             <div className='la3'>\n//                                 <label>Amount :</label>\n//                                 <input type='number' value={selectitem.total} onChange={(e) => setSelectitem({ ...selectitem, total: e.target.value})} />\n//                             </div><br/>\n//                             <button type=\"button\" class=\"btn btn-outline-warning\" onClick={hadelUpdate}>Update Item</button>\n//                         </div>\n//                     </DialogContent>\n//                 </Dialog>\n//             )}\n//         </div>\n//     )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Thanura Thilak/Desktop/firstp/src/billpage/Additemb.jsx"],"sourcesContent":["// import { Dialog, DialogContent, DialogTitle } from '@mui/material';\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import '../css/additembutton.css';\n\n// export default function Additemb() {\n\n// //database connect part\n//     const [no,setNo]=useState('')\n//     const [description,setDescription]=useState('')\n//     const [total,setTotal]=useState('')\n//     const [billdetails,setBilldetails]=useState('')\n//     const [data,setData]=useState([])\n//     const [amo,setAmo] =useState(0)\n//     const [balance,setBalance]=useState(0)\n//     const [advance,setAdvance]=useState()\n//     const [updatebox,setUpdatebox]=useState(false)\n//     const [selectitem,setSelectitem]=useState(null)\n//     const Navigate = useNavigate();\n\n// //save item button method\n//     function savedbdata(e){\n//         e.preventDefault()\n//         const billdetail={description,total}\n//         console.log(billdetail)\n//         fetch(\"http://localhost:8080/api/v1/bill/save\",{\n//             method:\"POST\",\n//             headers:{\"Content-Type\":\"application/json\"},\n//             body:JSON.stringify(billdetail)\n//         })\n//         .then(()=>{\n//             console.log(\"new bill added successfully.\")\n//         })\n//     }\n    \n// //get table method\n//     const fetchtable =()=>{\n//         fetch(\"http://localhost:8080/api/v1/bill/get\")\n//         .then(res => res.json())\n//         .then((result) => {\n//             setData(result);\n//         });\n//     }\n//     useEffect(() => {\n//         fetchtable();\n//     })\n//     useEffect(() => {\n//         const totalSum = data.reduce((sum,item)=>sum + parseFloat(item.total || 0), 0);\n//         setAmo(totalSum);\n//     },[data])\n    \n// //delete save data method\n//     const hadeldelete = (no) =>{\n//         fetch(\"http://localhost:8080/api/v1/bill/delete/\"+no,{\n//             method:\"DELETE\",\n//             headers:{\"Content-Type\":\"application/json\"},\n//             body:JSON.stringify(hadeldelete)\n//         })\n//         .then(res=>{\n//             alert(\"Bill deleted successfully.\")\n//         })\n//         .catch(er=>console.log(er));\n//     }\n// //update save data method\n//     const openUpdateDialog =(item)=>{\n//         setSelectitem(item);\n//         setUpdatebox(true);\n//     };\n\n//     const hadelUpdate = ()=>{\n//         if (selectitem){\n//             fetch(\"http://localhost:8080/api/v1/bill/update\",{\n//                 method :\"PUT\",\n//                 headers:{\"Content-Type\":\"application/json\"},\n//                 body:JSON.stringify(selectitem),\n//             })\n//             .then(()=>{\n//                 alert(\"Update Successfully.\");\n//                 setUpdatebox(false);\n//                 fetchtable();\n//             })\n//             .catch((err)=>console.log(err));\n//         }\n//     }\n// //alance method\n//     useEffect(()=>{\n//         const calcu = amo - (parseFloat(advance) || 0);\n//         setBalance(calcu);\n//     },[amo,advance])\n// //dropdown menu part\n//     const options =[\n//         {label:\"Admission Charges\", value:1},\n//         {label:\"General Nursing Care\", value:2},\n//         {label:\"Doctor and Room Charges\", value:3},\n//         {label:\"Pharmacy Charges\", value:4},\n//         {label:\"X Ray\", value:5},\n//         {label:\"Laboratory\", value:6},\n//         {label:\"ECG\", value:7},\n//         {label:\"Other Charges\", value:8}\n//     ]\n//     function hadelclick(event){\n//         setDescription(event.target.value)\n//     }\n\n// // interface body part\n//     return (\n//         <div className='body'>\n//             <main className='main_box'>\n//                 <section className='box_header'>\n//                     <div className='fo1'>\n//                         <form >\n//                             <div className=\"mb-3\">\n//                                 <label for=\"input_1\" class=\"form-label\">Description : </label>\n//                                 <div class=\"btn-group\">\n//                                     <select className='form-select' onChange={hadelclick}>\n//                                         {options.map(option =>(\n//                                             <option >{option.label}</option>\n//                                         ))}\n//                                     </select>\n//                                     <input type='text' value={description} onChange={(e)=>setDescription(e.target.value)} placeholder='Description Charges'/>\n//                                 </div>\n//                             </div>\n//                             <div className=\"input-amount\">\n//                                 <label for=\"input_2\" class=\"form-label\">Amount : </label>\n//                                 <span >Rs </span>\n//                                 <input  type=\"number\" value={total} onChange={(e)=>setTotal(e.target.value)} placeholder=\"0,000\" />\n//                                 <span >.00</span>\n//                                 <div className='item-button'>\n//                                     <button type=\"button\" class=\"btn btn-outline-info\" onClick={savedbdata}>Add Item</button>\n//                                     <button type=\"button\" class=\"btn btn-outline-success\" onClick={()=> Navigate(\"/Printinvoce\")}>Generate Invoice</button>\n//                                 </div>\n//                             </div>\n//                         </form>\n//                     </div>\n//                     <div className='fo2'>\n//                         <form>\n//                             <div className='but'>\n//                                 <button type=\"button\" class=\"btn btn-danger\">All Delete</button>\n//                             </div>\n//                             <div className=\"tota\">\n//                                 <label>Total Amount :</label>\n//                                     <span >Rs</span>\n//                                     <input value={amo} placeholder='0,000'/>\n//                                     <span >.00</span>\n//                                 <label>Advance :</label>\n//                                     <span >Rs</span>\n//                                     <input value={advance} placeholder='0,000' onChange={(e)=>setAdvance(e.target.value)} />\n//                                     <span >.00</span>\n//                                 <label>Balance be Paid :</label>\n//                                     <span >Rs</span>\n//                                     <input  value={balance} placeholder='0,000'/>\n//                                     <span >.00</span>\n//                             </div>\n//                         </form>\n//                     </div>\n//                 </section>\n//                 <section className='box_body'>\n//                     <table>\n//                         <thead>\n//                             <tr>\n//                                 <th className='th1'>No</th>\n//                                 <th className='th2'>Description</th>\n//                                 <th className='th3'>Total</th>\n//                                 <th className='th4'>Action</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {data.map(billdetail=>(\n//                                 <tr>\n//                                     <td className='div1'>{billdetail.no}</td>\n//                                     <td className='div2'>{billdetail.description}</td>\n//                                     <td className='div3'>Rs {billdetail.total}.00</td>\n//                                     <td className='div4'>\n//                                     <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => hadeldelete(billdetail.no)}>Remove</button>\n//                                     <button type=\"button\" class=\"btn btn-outline-warning\" onClick={()=>openUpdateDialog(billdetail)}>Update</button>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </section>\n//             </main>\n        \n//             {selectitem && (\n//                 <Dialog open={updatebox} onClose={() => setUpdatebox(false)}>\n//                     <DialogTitle>\n//                         <div className='title'>\n//                             <h3>Update Data</h3>\n//                             <button type=\"button\" class=\"btn btn-outline-danger\" onClick={()=>setUpdatebox(false)}>Close</button>\n//                         </div>\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         <div className='body2'>\n//                             <div className='la1'>\n//                                 <label>No :</label>\n//                                 <input type='number' value={selectitem.no} onChange={(e) => setSelectitem({ ...selectitem, no: e.target.value})} disabled/>\n//                             </div>\n//                             <div className='la2'>\n//                                 <label>Description :</label>\n//                                 <input type='text' value={selectitem.description} onChange={(e) => setSelectitem({ ...selectitem, description: e.target.value})} />\n//                             </div>\n//                             <div className='la3'>\n//                                 <label>Amount :</label>\n//                                 <input type='number' value={selectitem.total} onChange={(e) => setSelectitem({ ...selectitem, total: e.target.value})} />\n//                             </div><br/>\n//                             <button type=\"button\" class=\"btn btn-outline-warning\" onClick={hadelUpdate}>Update Item</button>\n//                         </div>\n//                     </DialogContent>\n//                 </Dialog>\n//             )}\n//         </div>\n//     )\n// }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}